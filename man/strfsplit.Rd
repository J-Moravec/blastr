% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/strfsplit.r
\name{strfsplit}
\alias{strfsplit}
\title{Split string according to first match}
\usage{
strfsplit(x, pattern, ...)
}
\arguments{
\item{x}{an input string}

\item{pattern}{a pattern along which to split}

\item{...}{other arguments passed to \code{\link[base:grep]{base::regexpr()}}, such as \code{fixed = TRUE}}
}
\value{
a list of two character vectors, both with the same length as \code{x}
}
\description{
Split the character vector \code{x} into two substrings according to the first matched pattern.
}
\details{
This is similar to \code{\link[base:strsplit]{base::strsplit()}}, but instead dividing the string along every
match of the pattern, the string is split only along the first match.
I.e., similar to: \verb{lapply(strsplit(x, split), \\(x)\{list(x[1], paste0(x[-1], collapse = split)}
Unlike the above, instead of returning a list of vectors of size two, we return a list
of size two, each containing a vector with a length equal to to \code{x}.
This way getting the first or the second element is easier.
}
\examples{
s = strfsplit("foo bar", " ", fixed = TRUE)
identical(s, list("foo", "bar"))

r = strfsplit("foo", " ", fixed = TRUE)
identical(s, list("foo", NA_character_))

r = strfsplit(NA, " ", fixed = TRUE)
identical(r, list(NA_character_, NA_character_))

}
